name: Release Glue Jobs

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'glue-jobs/**'
  workflow_dispatch:

concurrency:
  group: release-glue-${{ github.ref }}
  cancel-in-progress: false

jobs:
  test:
    name: Run Glue Jobs Tests Before Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install UV
        uses: astral-sh/setup-uv@v2
        with:
          enable-cache: true

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Test glue-jobs
      - name: Install glue-jobs dependencies
        run: cd glue-jobs && uv sync --group dev

      - name: Run glue-jobs linter
        run: |
          cd glue-jobs
          uv run ruff check .
          uv run ruff format --check .

      - name: Run glue-jobs type checker
        run: cd glue-jobs && uv run ty src/

      - name: Run glue-jobs unit tests
        run: cd glue-jobs && uv run pytest -m unit -v --cov=src --cov-report=term-missing

  build:
    name: Build Glue Jobs Package
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install UV
        uses: astral-sh/setup-uv@v2
        with:
          enable-cache: true

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Build glue-jobs package
        run: |
          cd glue-jobs
          uv sync
          uv build
          mkdir -p ../dist
          cp dist/*.whl ../dist/
          # Create utils.zip for Glue
          cd src && zip -r ../../dist/glue-utils.zip utils transformations -x "*/__pycache__/*"

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: glue-build-artifacts
          path: dist/
          retention-days: 30

  release:
    name: Python Semantic Release for Glue Jobs
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    permissions:
      contents: write
      id-token: write
    outputs:
      version: ${{ steps.semantic_release.outputs.version }}
      released: ${{ steps.semantic_release.outputs.released }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install UV
        uses: astral-sh/setup-uv@v2
        with:
          enable-cache: true

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: cd glue-jobs && uv sync --group dev

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: glue-build-artifacts
          path: dist/

      - name: Run Python Semantic Release
        id: semantic_release
        uses: python-semantic-release/python-semantic-release@v9.14.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          directory: "./glue-jobs"

      - name: Upload release artifacts
        if: steps.semantic_release.outputs.released == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Upload distribution files to the release
          gh release upload glue-v${{ steps.semantic_release.outputs.version }} dist/*.zip dist/*glue*.whl

  notify-success:
    name: Notify Glue Jobs Release Success
    needs: release
    runs-on: ubuntu-latest
    if: needs.release.outputs.released == 'true'
    steps:
      - name: Release Success Notification
        run: |
          echo "üéâ Glue Jobs release glue-v${{ needs.release.outputs.version }} completed successfully!"
          echo "üì¶ New version has been published"
          echo "üìã Changelog has been updated"
          echo "üè∑Ô∏è Git tag has been created"

  notify-no-release:
    name: Notify No Glue Jobs Release Needed
    needs: release
    runs-on: ubuntu-latest
    if: needs.release.outputs.released == 'false'
    steps:
      - name: No Release Notification
        run: |
          echo "‚ÑπÔ∏è No glue jobs release needed"
          echo "üìù No conventional commits found in glue-jobs/ that trigger a release"
          echo "üí° Use feat:, fix:, or breaking changes to trigger releases"

  notify-failure:
    name: Notify Glue Jobs Release Failure
    needs: [test, build, release]
    runs-on: ubuntu-latest
    if: failure()
    steps:
      - name: Release Failure Notification
        run: |
          echo "‚ùå Glue Jobs release failed!"
          echo "üîç Please check the workflow logs for details"
          echo "üõ†Ô∏è Fix any issues and push again to retry"