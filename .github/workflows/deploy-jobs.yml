name: Deploy Glue Jobs

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        type: choice
        options:
          - dev
          - staging
          - prod
      version_tag:
        description: 'Version tag to deploy (optional, defaults to latest for builds or release tag for releases)'
        required: false
        type: string
      use_release:
        description: 'Download artifacts from GitHub release (specify release tag in version_tag)'
        required: false
        type: boolean
        default: false

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Install Poetry
        run: pip install poetry
      
      - name: Install dependencies
        run: cd glue-jobs && poetry install
      
      - name: Run linter
        run: make lint
      
      - name: Run unit tests
        run: make test-unit

  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set deployment parameters
        id: env
        run: |
          # Use user-specified environment
          echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT
          
          # Determine version tag
          if [ -n "${{ inputs.version_tag }}" ]; then
            VERSION_TAG="${{ inputs.version_tag }}"
          else
            VERSION_TAG="latest"
          fi
          
          # Remove glue-v prefix if present (for S3 paths)
          VERSION_TAG="${VERSION_TAG#glue-v}"
          echo "version_tag=$VERSION_TAG" >> $GITHUB_OUTPUT
          echo "prefix=$VERSION_TAG" >> $GITHUB_OUTPUT
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Download artifacts from release
        if: inputs.use_release == true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p dist
          RELEASE_TAG="${{ inputs.version_tag }}"
          # Add glue-v prefix if not present for release downloads
          if [[ ! "$RELEASE_TAG" == glue-v* ]]; then
            RELEASE_TAG="glue-v$RELEASE_TAG"
          fi
          echo "Downloading from release: $RELEASE_TAG"
          gh release download "$RELEASE_TAG" --pattern "*.whl" --pattern "requirements.txt" --dir dist/ || echo "No artifacts found for release $RELEASE_TAG"
      
      - name: Build packages locally
        if: inputs.use_release != true
        run: |
          # Install UV for faster package management
          pip install uv
          make package-jobs
      
      - name: Deploy to S3
        run: |
          # Upload wheel file for dependencies
          aws s3 cp dist/*.whl s3://glue-scripts-${{ steps.env.outputs.environment }}/dependencies/${{ steps.env.outputs.prefix }}/
          
          # Upload requirements.txt for external dependencies
          aws s3 cp dist/requirements.txt s3://glue-scripts-${{ steps.env.outputs.environment }}/dependencies/${{ steps.env.outputs.prefix }}/requirements.txt
          
          # Upload job scripts
          aws s3 cp glue-jobs/src/jobs/ s3://glue-scripts-${{ steps.env.outputs.environment }}/scripts/${{ steps.env.outputs.prefix }}/ \
            --recursive --exclude "*.pyc" --exclude "__pycache__"
      
      - name: Deployment Summary
        run: |
          echo "üöÄ Glue jobs deployed successfully!"
          echo "üìç Environment: ${{ steps.env.outputs.environment }}"
          echo "üè∑Ô∏è  Version: ${{ steps.env.outputs.version_tag }}"
          echo "üì¶ Scripts Location: s3://glue-scripts-${{ steps.env.outputs.environment }}/scripts/${{ steps.env.outputs.prefix }}/"
          echo "üêç Dependencies: s3://glue-scripts-${{ steps.env.outputs.environment }}/dependencies/${{ steps.env.outputs.prefix }}/"
          echo "üìã Requirements: s3://glue-scripts-${{ steps.env.outputs.environment }}/dependencies/${{ steps.env.outputs.prefix }}/requirements.txt"
          if [ "${{ inputs.use_release }}" == "true" ]; then
            echo "‚úÖ Deployed from GitHub release artifacts"
          else
            echo "üî® Deployed from locally built artifacts"
          fi