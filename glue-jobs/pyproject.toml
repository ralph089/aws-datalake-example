[project]
name = "aws-glue-etl"
version = "1.0.0"
description = "AWS Glue ETL Pipeline with Iceberg support"
authors = [
    {name = "Data Engineering Team"}
]
readme = "../README.md"
requires-python = ">=3.10"
dependencies = [
    # AWS SDK
    "boto3>=1.28.0",
    # HTTP & API
    "httpx>=0.25.0",
    "tenacity>=8.2.0",
    # Logging
    "structlog>=23.2.0",
    # Utilities
    "python-dotenv>=1.0.0",
    "python-dateutil>=2.8.0",
    "typing-extensions>=4.8.0",  # For Annotated type support
    # Data processing (available in Glue runtime but needed for local testing)
    "pandas>=2.0.0",
    "pyarrow>=14.0.0",
]


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["F401", "F811"]

[tool.ruff]
line-length = 120
target-version = "py310"

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
pythonpath = ["src"]
addopts = "-v --tb=short"
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[dependency-groups]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.12.0",
    "ruff>=0.1.0",
    "moto>=4.2.0",
    "black>=23.0.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    "pyspark==3.5.2",
    "factory-boy>=3.3.0",
    "chispa>=0.9.0",
]


